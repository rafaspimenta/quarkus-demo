services:
  api01: &api
    image: quarkus/quarkus
    hostname: api01
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    expose:
      - "8080"
    #deploy:
    #  resources:
    #    limits:
    #      cpus: '0.5'
    #      memory: '200MB'
    environment:
      - QUARKUS_PROFILE=prod
    networks:
      - payment-processor
      - app-network

  api02:
    <<: *api
    hostname: api02

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      - "9999:9999"
    #deploy:
    #  resources:
    #    limits:
    #      cpus: '0.3'
    #      memory: '50MB'
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    user: "999:999"
    ports:
      - "5672:5672"   # AMQP protocol port
      - "15672:15672" # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_ERLANG_COOKIE=mycookie
    networks:
      - app-network
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:16.1-alpine
    hostname: postgres
    environment:
      - POSTGRES_DB=rinha
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"
    volumes:
      - ./src/main/resources/db/migration:/docker-entrypoint-initdb.d
    #deploy:
    #  resources:
    #    limits:
    #      cpus: '0.4'
    #      memory: '130MB'
    command: postgres -c max_connections=200 -c shared_buffers=128MB -c synchronous_commit=off
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d rinha"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge
  payment-processor:
    external: true

volumes:
  rabbitmq_data: